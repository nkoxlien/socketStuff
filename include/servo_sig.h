/*
 * Linux 2.6 and 3.0 'parrot' sample device driver
 *
 * Copyright (c) 2011, Pete Batard <pete@akeo.ie>
 *
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */
 
/*****************************************************************************
*			Defines
*****************************************************************************/
#include "driver.h"

void moveArm();
 
long map(long x, long in_min, long in_max, long out_min, long out_max);
 
//*****************************************************************************
//*****************************************************************************
void receiveData(int n, siginfo_t *info, void *unused);

//*****************************************************************************
//*****************************************************************************
void control_c_handler(int n, siginfo_t *info, void *unused);

//*****************************************************************************
//*****************************************************************************
int enable_interrupts(void);

//*****************************************************************************
//*****************************************************************************
int disable_interrupts(void);

//*****************************************************************************

//*****************************************************************************
int enable_servos(void);

//*****************************************************************************
//*****************************************************************************
int disable_shift(void);

//*****************************************************************************
//*****************************************************************************
int set_pid(void);

//*****************************************************************************
//*****************************************************************************
int clear_pid(void);

//*****************************************************************************
//*****************************************************************************
int write_servo1(int val);


//*****************************************************************************
//*****************************************************************************
int write_servo2(int val);


//*****************************************************************************
//*****************************************************************************
int write_servo3(int val);


//*****************************************************************************
//*****************************************************************************
int write_servo4(int val);


//*****************************************************************************
//*****************************************************************************
int write_servo5(int val);


//*****************************************************************************
//*****************************************************************************
int write_servo6(int val);
